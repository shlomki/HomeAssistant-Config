input_text:
  gallery_display_day:

rest_command:
  autoremote_house_tablet_doorbell_command: 
    method: GET
    url: !secret autoremote_house_tablet_doorbell_command


automation:
  # - alias: Remember last door motion
  #   trigger:
  #     - platform: state
  #       entity_id: 
  #         - binary_sensor.camera_front_door_motion
  #         - binary_sensor.camera_living_room_motion
  #       from: 'off'
  #       to: 'on'
  #   action:
  #     - service: input_text.set_value
  #       entity_id: input_text.last_door_motion
  #       data:
  #         value: '{{ trigger.to_state.entity_id }}'

  - alias: Door is opened when not home
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door
        from: 'off'
        to: 'on'
    condition:
      - condition: state
        entity_id: group.bffs
        state: not_home
    action:
      - service: notify.bffs
        data:
          message: The front door has been opened and no one's home!
        
  - alias: Door is opened with photo actions
    variables:
      today_name: >
        {% set sensor_names = [ 'Monday', 'Tuesday', 'Wednesday','Thursday','Friday','Saturday','Sunday'] %}
        {{ sensor_names[now().weekday()] }}
      front_door_photo: "/media/front_door/{{today_name}}/{{ now().strftime('%H.%M.%S') }}_front_door.jpg"
      living_room_photo: "/media/front_door/{{today_name}}/{{ now().strftime('%H.%M.%S') }}_living_room.jpg"
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door
        from: 'off'
        to: 'on'
    action:
      - service: camera.snapshot
        data:
          entity_id: camera.front_door
          filename: '{{ front_door_photo }}'
      - service: camera.snapshot
        data:
          entity_id: camera.living_room
          filename: '{{ living_room_photo }}'
      - service: script.notify_shlomi_when_away_with_photo_actions
        data:
          message: The front door has been opened
          front_door_photo: '{{ front_door_photo }}'
          living_room_photo: '{{ living_room_photo }}'
      - service: script.notify_inbal_when_away_with_photo_actions
        data:
          message: The front door has been opened
          front_door_photo: '{{ front_door_photo }}'
          living_room_photo: '{{ living_room_photo }}'


  - alias: Doorbell ring
    trigger:
      - platform: state
        entity_id: binary_sensor.doorbell
        from: 'off'
        to: 'on'
    action:
      - service: script.blink_living_room_bff_light
      - service: notify.bffs
        data:
          message: "Ding dong! Someone is at the door!"
      - delay:
          seconds: 10

  - alias: Doorbell ring with photo
    variables:
      filename: /config/www/camera_snaps/front_door.jpg
    trigger:
      - platform: state
        entity_id: binary_sensor.doorbell
        from: 'off'
        to: 'on'
    action:
      - service: camera.snapshot
        data:
          entity_id: camera.front_door
          filename: '{{ filename }}'
      - service: script.notify_bffs_photo
        data:
          file: '{{ filename }}'
      - delay:
          seconds: 10

  - alias: Doorbell display video on house tablet
    trigger:
      - platform: state
        entity_id: binary_sensor.doorbell
        from: 'off'
        to: 'on'
    action:
      #Launch HA on tablet using AutoRemote
      - service: rest_command.autoremote_house_tablet_doorbell_command

      #Show the front door camera on tablet
      - service: browser_mod.popup
        data:
          title: Front Door
          deviceID:
            - house_tablet
          large: true
          card:
            type: custom:webrtc-camera
            entity: camera.front_door
      
      #Wait for the door to open for 1 minute
      - wait_template: "{{ is_state('binary_sensor.front_door', 'on') }}"
        timeout:
          minutes: 1
        continue_on_timeout: true

      - choose:
          # If door has been opened, wait for an additional 20 seconds
          - conditions:
              - condition: state
                entity_id: binary_sensor.front_door
                state: 'on'
            sequence:
              - delay:
                  seconds: 20
          
      #Close the popup
      - service: browser_mod.close_popup
        data:
          deviceID:
            - house_tablet



  # - alias: Door is opened with photo from last motion
  #   trigger:
  #     - platform: state
  #       entity_id: binary_sensor.front_door
  #       from: 'off'
  #       to: 'on'
  #   action:
  #     - service: camera.snapshot
  #       data:
  #         entity_id: '{{ states("input_text.last_door_motion") }}'
  #         filename: 'camera_snaps/{{ states("input_text.last_door_motion") }}.jpg'
  #     - service: script.notify_bffs_photo
  #       data:
  #         message: The front door has been opened
  #         file: 'camera_snaps/{{ states("input_text.last_door_motion") }}.jpg'

  - alias: Front door Left Open
    mode: single
    trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'off'
      to: 'on'
      for: 
        minutes: 3
    action:
      - service: script.notify_all
        data:
          message: Hey, I think the front door was left open
      - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.front_door
          from: 'on'
          to: 'off'
      - service: script.notify_all
        data:
          message: The front door was closed

  - alias: Front door Left Open Reminder
    mode: single
    trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      from: 'off'
      to: 'on'
      for: 
        minutes: 10
    action:
      - service: script.notify_all
        data:
          message: The front door is still open (10 minute reminder).

  - alias: Delete old front door snapshots
    trigger:
      platform: time
      at: "00:00:10"
    action:
      - service: shell_command.removesnapshots
        data:
          day: >
            {% set sensor_names = [ 'Monday', 'Tuesday', 'Wednesday','Thursday','Friday','Saturday','Sunday'] %}
            {{ sensor_names[now().weekday()] }}

  - alias: Set gallery day
    trigger:
      platform: time
      at: "00:00:00"
    action:
      - service: input_text.set_value
        data:
          entity_id: input_text.gallery_display_day
          value: >
            {% set sensor_names = [ 'Monday', 'Tuesday', 'Wednesday','Thursday','Friday','Saturday','Sunday'] %}
            {{ sensor_names[now().weekday()] }}

shell_command:
  removesnapshots: 'find /media/front_door/{{ day }}/ -exec rm {} \;'  

sensor:
  - platform: template
    sensors:
      front_door_combined:
        friendly_name: "Front Door"
        value_template: "{{ states('binary_sensor.front_door') | replace('off', 'Closed') | replace('on', 'Open') | capitalize }}, {{ states('lock.front_door') if is_state('binary_sensor.front_door_lock', 'unavailable') else states('binary_sensor.front_door_lock') | replace('off', 'Locked') | replace('on', 'Unlocked') | capitalize }}"

script:
  front_door_lock_toggle:
    alias: "Front Door Lock Toggle"
    sequence:
      - alias: "If door is open, do nothing"
        condition: state
        entity_id: binary_sensor.front_door
        state: "off"

      - service: "{{ 'lock.lock' if is_state('binary_sensor.front_door_lock', 'on') else 'lock.unlock' }}"
        entity_id: lock.front_door

  blink_living_room_bff_light:
    alias: Blink Living Room BFF Light
    sequence:
      - repeat:
          count: 10
          sequence:
            - service: light.toggle
              entity_id: light.living_room_bff_light
            - delay:
                seconds: 0.5
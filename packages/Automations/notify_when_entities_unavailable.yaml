#############################################################################################
################ DON'T FORGET TO CHANGE THE NOTIFICATION SERVICE IN LINE 50! ################
#############################################################################################

#######################################################
### Sensor for unavailable entities, also good for UI.
### Updates immediately as soon as entities change.
#######################################################

template:
  - sensor:
      - name: "Unavailable Entities"
        state: "{{ expand('group.monitored_entities') | selectattr('state', 'in', ['unavailable', 'unknown', 'none']) | join(', ', attribute='attributes.friendly_name') | truncate(252) or 'Online' }}"

  #######################################################
  ### Helper
  #######################################################

input_text:
  unavailable_entities_temp_state:

automation:
  #######################################################
  ### Alert about entities becoming unavailable or online
  #######################################################

  - id: Unavailable Entities - Notify
    alias: Unavailable Entities - Notify
    variables:
      from_state: "{{ states('input_text.unavailable_entities_temp_state') }}"
      from_state_list: "{{ from_state.split(', ') }}"
      to_state: "{{ trigger.to_state.state if trigger.to_state.state != 'Online' else '' }}"
      to_state_list: "{{ to_state.split(', ') }}"
      became_online: "{{ from_state_list | reject('in', to_state_list) | join(', ') }}"
      became_unavailable_list: "{{ to_state_list | reject('in', from_state_list) | list }}"
      became_unavailable: "{{ became_unavailable_list | join(', ') }}"
      other_unavailable_entities: "{{ to_state_list | reject('in', became_unavailable_list) | join(', ') }}"

    trigger:
      - platform: state
        entity_id: sensor.unavailable_entities

        #Let other entities change as well so that we don't spam.
        #Has to be a minimum of 1 second, otherwise you won't get ONLINE notifications (because of the way I wrote this).
        for:
          seconds: 10

    action:
      - service: notify.shlomi #Notifies me via telegram. Change this to your preferred service (such as: persistent_notification.create).
        data:
          message: |
            {% if became_unavailable != '' -%}ðŸš¨ Became <b>UNAVAILABLE</b>: {{ became_unavailable }}
            ------{%- endif %}
            {%- if became_online != ''%}
            âœ… Became <b>ONLINE</b>: {{ became_online }}
            ------{%- endif %}
            {% if other_unavailable_entities != '' %}ðŸš¨ Still <b>UNAVAILABLE</b>: {{ other_unavailable_entities }}{% else %}âœ… Everything else is ONLINE!{%- endif %}

      - service: input_text.set_value
        data:
          entity_id: input_text.unavailable_entities_temp_state
          value: ""

  #######################################################
  ### When entities start changing,
  ### store the initial state temporarily so that
  ### we could tell which entities have changes.
  #######################################################

  - id: Unavailable Entities - Store Temp State
    alias: Unavailable Entities - Store Temp State

    trigger:
      - platform: state
        entity_id: sensor.unavailable_entities

    condition:
      alias: "Temp State is Empty"
      condition: template
      value_template: "{{ is_state('input_text.unavailable_entities_temp_state', '') }}"

    action:
      service: input_text.set_value
      data:
        entity_id: input_text.unavailable_entities_temp_state
        value: "{{ '' if trigger.from_state.state == 'Online' else trigger.from_state.state }}"

  #######################################################
  ### Group of monitored entities.
  ### Add any entities you want to be notified about.
  #######################################################

group:
  monitored_entities:
    entities:
      - switch.living_room_entrance
      - switch.living_room_hallway
      - switch.living_room_main
      - light.living_room_scene
      - switch.living_room_tv_light
      - light.living_room_scene
      - light.balcony_main
      - light.balcony_string_lights
      - switch.balcony_string_lights_toggle
      - light.kitchen_counter
      - switch.kitchen_island
      - light.kitchen_pantry
      - switch.hallway_main_toggle_front
      - switch.hallway_main_toggle_back
      - light.toilet_main
      - light.office_bff_light
      - light.office_bff_light_toggle
      - switch.office_main
      - light.office_main_toggle
      - switch.guests_main
      - switch.guests_main_toggle
      - switch.bathroom_heater
      - switch.water_boiler
      - light.bathroom_main
      - light.bathroom_laundry
      - switch.riley_main
      - switch.riley_scene_toggle
      - light.bedroom_closet
      - switch.bedroom_entrance
      - switch.bedroom_entrance_toggle_left
      - switch.bedroom_entrance_toggle_right
      - switch.bedroom_main
      - switch.bedroom_main_toggle_left
      - switch.bedroom_main_toggle_right
      - switch.bedroom_scene
      - switch.bedroom_scene_left
      - light.bedroom_scene_right
      - binary_sensor.fridge
      - binary_sensor.freezer
      - binary_sensor.cat_motion
      - binary_sensor.bedroom_closet_motion
      - binary_sensor.bathroom_closet_leak
      - binary_sensor.bathroom_floor_leak
      - binary_sensor.bathroom_floor_leak
      - binary_sensor.kitchen_closet_leak
      - binary_sensor.front_door
      - binary_sensor.front_door_lock
      - switch.front_door_camera_module
      - binary_sensor.bathroom_door
      - binary_sensor.toilet_motion
      - binary_sensor.toilet_door
      - switch.subwoofer
      - cover.living_room_shutter_switch
      - cover.guests_shutter_switch
      - cover.bedroom_shutter_switch
      - cover.living_room_curtain
      - cover.living_room_curtain_switch
      - binary_sensor.balcony_window
      - binary_sensor.kitchen_window
      - binary_sensor.office_window
      - binary_sensor.guests_window
      - binary_sensor.riley_window
      - binary_sensor.bedroom_window
      - cover.office_shutter_switch
      - cover.office_curtain
      - cover.office_curtain_switch
      - switch.lower_gate
      - switch.upper_gate
      - binary_sensor.doorbell
      - remote.living_room
      - remote.office
      - remote.guests
      - remote.riley
      - remote.bedroom
      - binary_sensor.rain
      - switch.intercom
      - light.stairs
      - switch.stairs_module
      - binary_sensor.stairs_motion
      - sensor.living_room_temperature
      - sensor.office_temperature
      - sensor.guests_temperature
      - sensor.riley_temperature
      - sensor.bedroom_temperature
      - sensor.bedroom_closet_temperature
      - binary_sensor.toilet_flush
      - switch.shelly_3em
      - binary_sensor.big_freezer
      - switch.living_room_side_lamp_smart_plug
      - sensor.outside_temperature
      - cover.kitchen_shutter_switch
      - cover.kitchen_curtain_switch
      - lock.front_door
      - cover.bedroom_curtain_motor
      - cover.bedroom_curtain_switch
      #- switch.living_room_bff_light
      - light.bathroom_cabinet

      #Fans
      # - switch.gray_fan_smart_plug
      - fan.bedroom_fan
      - fan.living_room_fan

      #Smart Plugs
      # - switch.il_smart_plug_1
      # - switch.il_smart_plug_2

      #TVs & Media Players
      - media_player.living_room_tv
      - media_player.bedroom_tv
      - media_player.balcony_tv
      # - media_player.google_tv
      # - media_player.bedroom_google_tv

      #Laundry Machine
      - binary_sensor.laundry_machine_door
      - switch.laundry_machine

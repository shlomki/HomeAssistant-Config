group:
  Bathroom Heating:
    entities:
      - light.bathroom_heater
      - input_number.bathroom_heater_timer_duration
      - timer.bathroom_heater
      - switch.water_boiler
      - input_number.water_boiler_timer_duration
      # - timer.water_boiler

timer:
  bathroom_heater:
    name: Heater Timer
    duration: '00:25:00'

  # water_boiler:
  #   name: Water Boiler Timer
  #   duration: '00:60:00'

input_number:
  bathroom_heater_timer_duration:
    name: Heater Timer (mins)
    min: 1
    max: 40
    step: 1

  water_boiler_timer_duration:
    name: Water Boiler Timer (mins)
    min: 15
    max: 120
    step: 15

automation:
#Heater
  - alias: Heater timer change
    initial_state: True
    trigger:
      platform: state
      entity_id: input_number.bathroom_heater_timer_duration
    condition:
      condition: state
      entity_id: timer.bathroom_heater
      state: active
    action:
      - service: automation.trigger
        entity_id: automation.heater_off
      - service: automation.trigger
        entity_id: automation.heater_on
  
  - alias: Heater on
    initial_state: True
    trigger:
      platform: state
      entity_id: light.bathroom_heater
      to: 'on'
    action:
      - service: timer.start
        entity_id: timer.bathroom_heater
        data:
          duration: '00:{{ states("input_number.bathroom_heater_timer_duration") | int }}:00'
  
  - alias: Heater off
    initial_state: True
    trigger:
      platform: state
      entity_id: light.bathroom_heater
      to: 'off'
    action:
      - service: timer.cancel
        entity_id: timer.bathroom_heater

  - alias: Heater off when timer finished
    trigger:
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.bathroom_heater
    action:
      service: light.turn_off
      data:
        entity_id:
          - light.bathroom_heater

#Heater door
  - alias: Heater on when door open notify
    trigger:
      - platform: state
        entity_id: light.bathroom_heater
        from: 'off'
        to: 'on'
        for: '30'
      - platform: state
        entity_id: binary_sensor.bathroom_door
        from: 'off'
        to: 'on'
        for: '30'
    condition:
      condition: and 
      conditions:
        - condition: state
          entity_id: light.bathroom_heater
          state:  'on'
          for: '30'
        - condition: state
          entity_id: binary_sensor.bathroom_door
          state:  'on'
          for: '30'
    action:
      - service: script.notify_all
        data:
          message: "Please close the door to continue using the heater. If not, I'll turn it off in 30 seconds for your safety."
          
  - alias: Heater on when door open turn off
    trigger:
      - platform: state
        entity_id: light.bathroom_heater
        from: 'off'
        to: 'on'
        for: '60'
      - platform: state
        entity_id: binary_sensor.bathroom_door
        from: 'off'
        to: 'on'
        for: '60'
    condition:
      condition: and 
      conditions:
        - condition: state
          entity_id: light.bathroom_heater
          state:  'on'
          for: '60'
        - condition: state
          entity_id: binary_sensor.bathroom_door
          state:  'on'
          for: '60'
    action:
      - service: homeassistant.turn_off
        entity_id: light.bathroom_heater
      - service: script.notify_all
        data:
          message: "The bathroom heater has been turned off."

#Water boiler
  # - alias: Water boiler timer change
  #   initial_state: True
  #   trigger:
  #     platform: state
  #     entity_id: input_number.water_boiler_timer_duration
  #   condition:
  #     condition: state
  #     entity_id: timer.water_boiler
  #     state: active
  #   action:
  #     - service: automation.trigger
  #       entity_id: automation.water_boiler_off
  #     - service: automation.trigger
  #       entity_id: automation.water_boiler_on
  
  # - alias: Water boiler on
  #   initial_state: True
  #   trigger:
  #     platform: state
  #     entity_id: switch.water_boiler
  #     to: 'on'
  #   action:
  #     - service: timer.start
  #       entity_id: timer.water_boiler
  #       data:
  #         duration: '00:{{ states("input_number.water_boiler_timer_duration") | int }}:00'
  
  # - alias: Water boiler off
  #   initial_state: True
  #   trigger:
  #     platform: state
  #     entity_id: switch.water_boiler
  #     to: 'off'
  #   action:
  #     - service: timer.cancel
  #       entity_id: timer.water_boiler

  # - alias: Water boiler off when timer finished
  #   trigger:
  #     platform: event
  #     event_type: timer.finished
  #     event_data:
  #       entity_id: timer.water_boiler
  #   action:
  #     - service: switch.turn_off
  #       entity_id:
  #         - switch.water_boiler
  #     - service: notify.bffs
  #       data:
  #         message: 'Water boiler finished after {{states("input_number.water_boiler_timer_duration") | int }} mins! Have a nice shower :)'

sensor:
  - platform: season
    type: meteorological

  - platform: template
    sensors:
      bathroom_temperature:
        friendly_name: "Bathroom"
        unit_of_measurement: '°C'
        value_template: '{{ state_attr("sensor.cat_motion", "temperature") }}'

      # outside_temperature:
      #   friendly_name: "Outside Temperature"
      #   unit_of_measurement: '°C'
      #   value_template: '{{ state_attr("binary_sensor.rain", "temperature") }}'

      living_room_temperature_monitor:
        friendly_name: Living Room Temperature
        value_template: >
            {% set temp = states('sensor.living_room_temperature') %}
            {% if temp >= states('input_number.room_temperature_max') %}
              Hot
            {% elif temp <= states('input_number.room_temperature_min') %}
              Cold
            {% else %}
              Ok
            {% endif %}

      office_temperature_monitor:
        friendly_name: Office Temperature
        value_template: >
            {% set temp = states('sensor.office_temperature') %}
            {% if temp >= states('input_number.room_temperature_max') %}
              Hot
            {% elif temp <= states('input_number.room_temperature_min') %}
              Cold
            {% else %}
              Ok
            {% endif %}

      birds_temperature_monitor:
        friendly_name: Birds Temperature
        value_template: >
            {% set temp = states('sensor.birds_temperature') %}
            {% if temp >= states('input_number.room_temperature_max') %}
              Hot
            {% elif temp <= states('input_number.room_temperature_min') %}
              Cold
            {% else %}
              Ok
            {% endif %}

      riley_temperature_monitor:
        friendly_name: Riley Temperature
        value_template: >
            {% set temp = states('sensor.riley_temperature') %}
            {% if temp >= states('input_number.room_temperature_max') %}
              Hot
            {% elif temp <= states('input_number.room_temperature_min') %}
              Cold
            {% else %}
              Ok
            {% endif %}

      bedroom_temperature_monitor:
        friendly_name: Bedroom Temperature
        value_template: >
            {% set temp = states('sensor.bedroom_temperature') %}
            {% if temp >= states('input_number.room_temperature_max') %}
              Hot
            {% elif temp <= states('input_number.room_temperature_min') %}
              Cold
            {% else %}
              Ok
            {% endif %}

      all_rooms_temperature_monitor:
        friendly_name: All Rooms Temperature
        value_template: >
          {{ states('sensor.living_room_temperature_monitor') if not is_state('sensor.living_room_temperature_monitor', 'Ok') else
             states('sensor.office_temperature_monitor') if not is_state('sensor.office_temperature_monitor', 'Ok') else
             states('sensor.birds_temperature_monitor') if not is_state('sensor.birds_temperature_monitor', 'Ok') else
             states('sensor.riley_temperature_monitor') if not is_state('sensor.riley_temperature_monitor', 'Ok') else
             states('sensor.bedroom_temperature_monitor') if not is_state('sensor.bedroom_temperature_monitor', 'Ok') else 'Ok' }}

input_number:
  room_temperature_max_summer:
    min: 15
    max: 32
    step: 0.1
    mode: box
  room_temperature_min_summer:
    min: 15
    max: 32
    step: 0.1
    mode: box
  room_temperature_max_autumn:
    min: 15
    max: 32
    step: 0.1
    mode: box
  room_temperature_min_autumn:
    min: 15
    max: 32
    step: 0.1
    mode: box
  room_temperature_max_winter:
    min: 15
    max: 32
    step: 0.1
    mode: box
  room_temperature_min_winter:
    min: 15
    max: 32
    step: 0.1
    mode: box
  room_temperature_max_spring:
    min: 15
    max: 32
    step: 0.1
    mode: box
  room_temperature_min_spring:
    min: 15
    max: 32
    step: 0.1
    mode: box
  room_temperature_max:
    min: 15
    max: 32
    step: 0.1
    mode: box
  room_temperature_min:
    min: 15
    max: 32
    step: 0.1
    mode: box

automation:
  - alias: Temperature Monitor Update Min Max Temp
    trigger:
      - platform: state
        entity_id: 
          - input_number.room_temperature_min_summer
          - input_number.room_temperature_max_summer
          - input_number.room_temperature_min_autumn
          - input_number.room_temperature_max_autumn
          - input_number.room_temperature_min_winter
          - input_number.room_temperature_max_winter
          - input_number.room_temperature_min_spring
          - input_number.room_temperature_max_spring
          - sensor.season

    variables:
      season: "{{ states('sensor.season') }}"

    action:
      - service: input_number.set_value
        data:
          entity_id: input_number.room_temperature_max
          value: "{{ states('input_number.room_temperature_max_' + season) }}"

      - service: input_number.set_value
        data:
          entity_id: input_number.room_temperature_min
          value: "{{ states('input_number.room_temperature_min_' + season) }}"

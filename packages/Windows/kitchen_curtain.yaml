cover:
  - platform: cover_rf_time_based
    devices:
      kitchen_curtain:
        name: Kitchen Curtain
        travelling_time_up: 16
        travelling_time_down: 16
        cover_entity_id: cover.kitchen_curtain_motor
        send_stop_at_ends: True

sensor:
  - platform: template
    sensors:
      kitchen_curtain_state:
        value_template: >
          {% if states('cover.kitchen_curtain_switch') == 'open' and state_attr("cover.kitchen_curtain_switch", "current_position") == 100 %}
          close
          {% elif states('cover.kitchen_curtain_switch') == 'closed' and state_attr("cover.kitchen_curtain_switch", "current_position") == 0 %}
          open
          {% else %}
          stop
          {% endif %}

automation:
  - alias: Kitchen Cover Update Position From Physical Switch
    trigger:
      - platform: state
        entity_id: sensor.kitchen_curtain_state
    condition:
      - alias: "not already in the same state" #Otherwise causes some weird racing condition between template cover and switch
        condition: template
        value_template: "{{ (trigger.to_state.state | replace('open', 'opening') | replace('close', 'closing')) != states('cover.kitchen_curtain') }}"    
    action:
      - service: cover_rf_time_based.set_known_action
        entity_id: cover.kitchen_curtain
        data:
          action: "{{ trigger.to_state.state }}"
      - service: "cover.{{ trigger.to_state.state }}_cover"
        entity_id: cover.kitchen_curtain_motor


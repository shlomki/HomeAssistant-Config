group:
  hallway_toggles:
    all: true
    entities:
      - switch.hallway_toggle_back
      - switch.hallway_toggle_front

automation:
  - alias: Living room sync fan light
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - switch.living_room_fan_light_toggle
          - light.living_room_fan
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: "homeassistant.turn_{{ trigger.to_state.state }}"
        target:
          entity_id: "{{ ['switch.living_room_fan_light_toggle', 'light.living_room_fan'] | reject('is_state', trigger.to_state.state) | list }}"

  - alias: Living room sync curtain light
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - light.living_room_curtain_light
          - switch.living_room_curtain_light_toggle
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: "homeassistant.turn_{{ trigger.to_state.state }}"
        target:
          entity_id: "{{ ['light.living_room_curtain_light', 'switch.living_room_curtain_light_toggle'] | reject('is_state', trigger.to_state.state) | list }}"

  - alias: Living room sync side lamp
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - light.living_room_side_lamp
          - switch.living_room_side_lamp_toggle
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: "homeassistant.turn_{{ trigger.to_state.state }}"
        target:
          entity_id: "{{ ['light.living_room_side_lamp', 'switch.living_room_side_lamp_toggle'] | reject('is_state', trigger.to_state.state) | list }}"

  - alias: Living room tv light sync dimmer
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - switch.living_room_tv_light_toggle
          - light.living_room_tv_light
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: "homeassistant.turn_{{ trigger.to_state.state }}"
        target:
          entity_id: "{{ ['switch.living_room_tv_light_toggle', 'light.living_room_tv_light'] | reject('is_state', trigger.to_state.state) | list }}"

  - alias: Stairs switch sync
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - switch.stairs_toggle
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: "homeassistant.turn_{{ trigger.to_state.state }}"
        entity_id: switch.stairs

  - alias: Balcony sync fan light with main light
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - light.balcony_main
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: "homeassistant.turn_{{ trigger.to_state.state }}"
        target:
          entity_id: "{{ ['light.balcony_fan', 'light.balcony_main'] | reject('is_state', trigger.to_state.state) | list }}"

  - alias: Office switches sync bff light
    id: Office switches sync bff light
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - light.office_bff_light
          - switch.office_bff_light_toggle
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: "homeassistant.turn_{{ trigger.to_state.state }}"
        target:
          entity_id: "{{ ['light.office_bff_light', 'switch.office_bff_light_toggle'] | reject('is_state', trigger.to_state.state) | list }}"

  - alias: Riley toggle sync main light
    id: Riley toggle sync main light
    max_exceeded: silent
    mode: single
    trigger:
      #Riley's toggle button was pressed
      - platform: state
        entity_id: sensor.riley_main_toggle
        not_from:
          - unavailable
          - unknown
        to:
          - single
          - double
          - long
    condition:
      - condition: or
        conditions:
          #Allow using the button only when Riley isn't sleeping
          - alias: "Riley isn't sleeping"
            condition: state
            entity_id: input_boolean.riley_is_sleeping
            state: "off"

          #Or when Riley is sleeping, but the light is on (and she would like to turn it off)
          - condition: and
            conditions:
              - alias: "Riley is sleeping"
                condition: state
                entity_id: input_boolean.riley_is_sleeping
                state: "on"
              - alias: "The light is on"
                condition: state
                entity_id: light.riley_main
                state: "on"

    action:
      - service: light.toggle
        entity_id: light.riley_main


  - alias: Bathroom toggle sync light
    id: Bathroom toggle sync light
    max_exceeded: silent
    mode: single
    trigger:
      #Riley's toggle button was pressed
      - platform: state
        entity_id: sensor.bathroom_toggle
        not_from:
          - unavailable
          - unknown
        to:
          - single
          - double
          - long

    # condition:
    #   - condition: or
    #     conditions:
    #       #Allow using the button only when Riley isn't sleeping
    #       - alias: "Riley isn't sleeping"
    #         condition: state
    #         entity_id: input_boolean.riley_is_sleeping
    #         state: "off"

    #       #Or when Riley is sleeping, but the light is on (and she would like to turn it off)
    #       - condition: and
    #         conditions:
    #           - alias: "Riley is sleeping"
    #             condition: state
    #             entity_id: input_boolean.riley_is_sleeping
    #             state: "on"
    #           - alias: "The light is on"
    #             condition: state
    #             entity_id: light.riley_main
    #             state: "on"
    action:
      - service: "{{ 'homeassistant.turn_on' if trigger.to_state.state == 'double' else 'light.toggle' }}"
        target:
          entity_id: "{{ 'group.bathroom_lights' if trigger.to_state.state == 'double' else 'light.bathroom_lights' }}"


  - alias: Guests switches sync main
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - switch.guests_main
          - switch.guests_main_toggle
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: "homeassistant.turn_{{ trigger.to_state.state }}"
        target:
          entity_id: "{{ ['switch.guests_main', 'switch.guests_main_toggle'] | reject('is_state', trigger.to_state.state) | list }}"

  - alias: Bathroom cabinet sync
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - light.bathroom_cabinet
          - switch.bathroom_cabinet_toggle
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: "homeassistant.turn_{{ trigger.to_state.state }}"
        target:
          entity_id: "{{ ['light.bathroom_cabinet', 'switch.bathroom_cabinet_toggle'] | reject('is_state', trigger.to_state.state) | list }}"

  - alias: Hallway sync switches when controllers change
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id: light.hallway_controllers_group
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown

    condition: #This is needed to avoid endless loops
      - alias: "Hallway main group is not the same state"
        condition: template
        value_template: "{{ not is_state('group.hallway_toggles', trigger.to_state.state) }}"

    action:
      - service: "homeassistant.turn_{{ trigger.to_state.state }}"
        entity_id: group.hallway_toggles

  - alias: Hallway sync controllers when switches change
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - switch.hallway_toggle_front
          - switch.hallway_toggle_back
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown

    condition: #This is needed to avoid endless loops
      - alias: "Hallway controller group is not the same state"
        condition: template
        value_template: "{{ not is_state('light.hallway_controllers_group', trigger.to_state.state) }}"

    action:
      - service: "homeassistant.turn_{{ trigger.to_state.state }}"
        entity_id:
          - light.hallway_controllers_group
          - group.hallway_toggles

  - alias: Riley switches scene
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - switch.riley_scene
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: light.turn_on
        entity_id:
          - light.riley_main
        data:
          brightness: "{{ 255 if state_attr('light.riley_main', 'brightness')|int < 127 else 1 }}"

  - alias: Bedroom right bed switches sync
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - switch.bedroom_main_toggle_right
          - switch.bedroom_entrance_toggle_right
          - switch.bedroom_fan_toggle_right
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: homeassistant.toggle
        target:
          entity_id: |
            {% set toggle_entity = trigger.to_state.entity_id | replace("_toggle_right", "") %}
            {{ toggle_entity | replace('switch.', 'fan.') if entity | contains('fan') else toggle_entity }}

  - alias: Bedroom left bed switches sync
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - switch.bedroom_main_toggle_left
          - switch.bedroom_entrance_toggle_left
          - switch.bedroom_fan_toggle_left
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: homeassistant.toggle
        target:
          entity_id: |
            {% set toggle_entity = trigger.to_state.entity_id | replace("_toggle_left", "") %}
            {{ toggle_entity | replace('switch.', 'fan.') if entity | contains('fan') else toggle_entity }}

  - alias: Balcony fan sync switch
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - fan.balcony_fan
          - switch.balcony_fan_toggle
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: "homeassistant.turn_{{ trigger.to_state.state }}"
        target:
          entity_id: "{{ ['fan.balcony_fan', 'switch.balcony_fan_toggle'] | reject('is_state', trigger.to_state.state) | list }}"

  - alias: Balcony string lights sync switch
    max_exceeded: silent
    mode: single
    trigger:
      - platform: state
        entity_id:
          - light.balcony_string_lights
          - switch.balcony_string_lights_toggle
        not_from:
          - unavailable
          - unknown
        not_to:
          - unavailable
          - unknown
    action:
      - service: "homeassistant.turn_{{ trigger.to_state.state }}"
        target:
          entity_id: "{{ ['light.balcony_string_lights', 'switch.balcony_string_lights_toggle'] | reject('is_state', trigger.to_state.state) | list }}"


switch:
  - platform: template
    switches:
      bedroom_right_bed_switches_sync:
        friendly_name: Bedroom Right Bed Switches Sync
        value_template: "{{ is_state('automation.bedroom_right_bed_switches_sync', 'on') }}"
        turn_on:

          - wait_template: "{{ is_state('script.click_to_wake_up', 'off') }}"
            timeout:
              seconds: 15
            continue_on_timeout: true

          - service: automation.turn_on
            entity_id: automation.bedroom_right_bed_switches_sync

        turn_off:
          - wait_template: "{{ is_state('script.click_to_wake_up', 'off') }}"
            timeout:
              seconds: 15
            continue_on_timeout: true

          - service: automation.turn_off
            entity_id: automation.bedroom_right_bed_switches_sync
group:
  All Lights:
    entities:
      - light.living_room_lights
      - light.balcony_lights
      - light.kitchen_lights
      - light.hallway_lights
      - light.office_lights
      - light.guests_main
      - light.riley_main
      - light.bedroom_lights
      - light.toilet_lights
      - light.bathroom_lights

  All Lights Except Riley:
    entities:
      - light.living_room_lights
      - light.balcony_lights
      - light.kitchen_lights
      - light.hallway_lights
      - light.office_lights
      - light.guests_lights
      - light.bedroom_lights
      - light.toilet_lights
      - light.bathroom_lights

  Living Room Lights:
    entities:
      - light.living_room_main
      - light.living_room_curtain_light
      - light.living_room_entrance
      - light.living_room_hallway
      - light.living_room_tv_light
      - light.living_room_side_lamp
      - light.living_room_bff_light
      - light.yule_trees

  Living Room Dimmable Lights:
    entities:
      - light.living_room_main
      - light.living_room_entrance
      - light.living_room_hallway
      - light.living_room_side_lamp
      - light.living_room_tv_light
      - light.living_room_curtain_light

  Balcony Lights:
    entities:
      - light.balcony_main
      - light.balcony_string_lights

  Balcony Dimmable Lights:
    entities:
      - light.balcony_string_lights

  Kitchen Lights:
    entities:
      - light.kitchen_island
      - light.kitchen_pantry
      - light.kitchen_counter

  Kitchen Dimmable Lights:
    entities:
      - light.kitchen_island

  Hallway Lights:
    all: true
    entities:
      - light.hallway_front
      - light.hallway_back

  Hallway Dimmable Lights:
    all: true
    entities:
      - light.hallway_front
      - light.hallway_back

  Office Lights:
    entities:
      - light.office_main
      - light.office_bff_light

  Guests Lights:
    entities:
      - light.guests_main

  Guests Dimmable Lights:
    entities:
      - light.guests_main

  Toilet Lights:
    entities:
      - light.toilet_main
      - light.toilet_night_light

  Bathroom Lights:
    entities:
      - light.bathroom_main
      - light.bathroom_laundry
      - light.bathroom_cabinet

  Riley Lights:
    entities:
      - light.riley_main

  Riley Dimmable Lights:
    entities:
      - light.riley_main

  Bedroom Lights:
    entities:
      - light.bedroom_main
      - light.bedroom_entrance
      - light.bedroom_closet

  Bedroom Dimmable Lights:
    entities:
      - light.bedroom_entrance

light:
  #A light entity that encapsulates all lights in the house, uses zigbee groups defined in Zigbee2MQTT
  - platform: group
    name: "Master"
    entities:
      - light.master_living_room
      - light.master_bedroom
      - light.toilet_night_light

  #A light entity that encapsulates all lights in the house except for Riley's room, uses zigbee groups defined in Zigbee2MQTT
  - platform: group
    name: "Master without Riley"
    entities:
      - light.master_living_room
      - light.master_bedroom_without_riley
      - light.toilet_night_light

  - platform: template
    lights:
      living_room_dimmable_lights:
        friendly_name: "Living Room Dimmable Lights"
        value_template: "{{ expand('group.living_room_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='entity_id') | list | count > 0 }} " #Are any lights in the group on?
        level_template: "{{ average((expand('group.living_room_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='attributes.brightness') | list) or [0]) }} " #What's the average brighthness in the group?
        availability_template: "{{ expand('group.living_room_dimmable_lights') | selectattr('state', 'in', ['on','off']) | list | count > 0 }}" #Are all lights in the group available?
        turn_on:
          - service: light.turn_on
            data:
              entity_id: "{{ expand('group.living_room_dimmable_lights') | map(attribute='entity_id') | list }}" #Turn on all lights in the group
        turn_off:
          - service: light.turn_off
            data:
              entity_id: "{{ expand('group.living_room_dimmable_lights') | map(attribute='entity_id') | list }}" #Turn off all lights in the group
        set_level:
          - service: script.turn_on
            target:
              entity_id: script.set_relative_light_level
            data:
              variables:
                group_entity_id: group.living_room_dimmable_lights
                light_entity_id: light.living_room_dimmable_lights
                brightness: "{{ brightness }}"

  - platform: template
    lights:
      bedroom_dimmable_lights:
        friendly_name: "Bedroom Dimmable Lights"
        value_template: "{{ expand('group.bedroom_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='entity_id') | list | count > 0 }} " #Are any lights in the group on?
        level_template: "{{ average((expand('group.bedroom_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='attributes.brightness') | list) or [0]) }} " #What's the average brighthness in the group?
        availability_template: "{{ expand('group.bedroom_dimmable_lights') | selectattr('state', 'in', ['on','off']) | list | count > 0 }}" #Are all lights in the group available?
        turn_on:
          - service: light.turn_on
            data:
              entity_id: "{{ expand('group.bedroom_dimmable_lights') | map(attribute='entity_id') | list }}" #Turn on all lights in the group
        turn_off:
          - service: light.turn_off
            data:
              entity_id: "{{ expand('group.bedroom_dimmable_lights') | map(attribute='entity_id') | list }}" #Turn off all lights in the group
        set_level:
          - service: script.turn_on
            target:
              entity_id: script.set_relative_light_level
            data:
              variables:
                group_entity_id: group.bedroom_dimmable_lights
                light_entity_id: light.bedroom_dimmable_lights
                brightness: "{{ brightness }}"

  - platform: template
    lights:
      balcony_dimmable_lights:
        friendly_name: "Balcony Dimmable Lights"
        value_template: "{{ expand('group.balcony_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='entity_id') | list | count > 0 }} " #Are any lights in the group on?
        level_template: "{{ average((expand('group.balcony_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='attributes.brightness') | list) or [0]) }} " #What's the average brighthness in the group?
        availability_template: "{{ expand('group.balcony_dimmable_lights') | selectattr('state', 'in', ['on','off']) | list | count > 0 }}" #Are all lights in the group available?
        turn_on:
          - service: light.turn_on
            data:
              entity_id: "{{ expand('group.balcony_dimmable_lights') | map(attribute='entity_id') | list }}" #Turn on all lights in the group
        turn_off:
          - service: light.turn_off
            data:
              entity_id: "{{ expand('group.balcony_dimmable_lights') | map(attribute='entity_id') | list }}" #Turn off all lights in the group
        set_level:
          - service: script.turn_on
            target:
              entity_id: script.set_relative_light_level
            data:
              variables:
                group_entity_id: group.balcony_dimmable_lights
                light_entity_id: light.balcony_dimmable_lights
                brightness: "{{ brightness }}"

  - platform: template
    lights:
      all_lights:
        value_template: "{{ is_state('group.all_lights', 'on') }}"
        turn_on:
          service: homeassistant.turn_on
          target:
            entity_id: light.master_without_riley
        turn_off:
          - service: light.turn_off
            target:
              entity_id: light.master

      #Template lights for each area in the house
      #When turned on - turn on just one light in the room
      #When turned off - turn off all lights in the room

      living_room_lights:
        friendly_name: "Living Room Lights"
        value_template: "{{ is_state('group.living_room_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.living_room_side_lamp
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.living_room_lights

      balcony_lights:
        friendly_name: "Balcony Lights"
        value_template: "{{ is_state('group.balcony_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.balcony_string_lights
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.balcony_lights

      hallway_lights:
        unique_id: "Hallway Lights"
        friendly_name: "Hallway Lights"
        value_template: "{{ is_state('light.hallway_controllers_group','on') }}"
        level_template: "{{ state_attr('light.hallway_controllers_group','brightness') }}"
        availability_template: "{{ not (is_state('light.hallway_front','unavailable') and is_state('light.hallway_back','unavailable')) }}" #If hallway front & back are both unavailable, then unavailable. Otherwise, available.
        turn_on:
          - service: homeassistant.turn_on
            entity_id: light.hallway_controllers_group
        turn_off:
          - service: light.turn_off
            entity_id: light.hallway_controllers_group
        set_level:
          - service: script.turn_on
            target:
              entity_id: script.set_relative_light_level
            data:
              variables:
                group_entity_id: group.hallway_dimmable_lights
                light_entity_id: light.hallway_lights
                brightness: "{{ brightness }}"

      kitchen_lights:
        friendly_name: "Kitchen Lights"
        value_template: "{{ is_state('group.kitchen_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.kitchen_island
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.kitchen_lights

  - platform: template
    lights:
      kitchen_dimmable_lights:
        friendly_name: "Kitchen Dimmable Lights"
        value_template: "{{ expand('group.kitchen_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='entity_id') | list | count > 0 }} " #Are any lights in the group on?
        level_template: "{{ average((expand('group.kitchen_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='attributes.brightness') | list) or [0]) }} " #What's the average brighthness in the group?
        availability_template: "{{ expand('group.kitchen_dimmable_lights') | selectattr('state', 'in', ['on','off']) | list | count > 0 }}" #Are all lights in the group available?
        turn_on:
          - service: light.turn_on
            data:
              entity_id: "{{ expand('group.kitchen_dimmable_lights') | map(attribute='entity_id') | list }}" #Turn on all lights in the group
        turn_off:
          - service: light.turn_off
            data:
              entity_id: "{{ expand('group.kitchen_dimmable_lights') | map(attribute='entity_id') | list }}" #Turn off all lights in the group
        set_level:
          - service: script.turn_on
            target:
              entity_id: script.set_relative_light_level
            data:
              variables:
                group_entity_id: group.kitchen_dimmable_lights
                light_entity_id: light.kitchen_dimmable_lights
                brightness: "{{ brightness }}"

      office_lights:
        friendly_name: "Office Lights"
        value_template: "{{ is_state('group.office_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.office_main
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.office_lights

      guests_lights:
        friendly_name: "Guests Lights"
        value_template: "{{ is_state('group.guests_lights', 'on') }}"
        level_template: "{{ state_attr('group.guests_dimmable_lights','brightness') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.guests_main
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.guests_lights
        set_level:
          - service: script.turn_on
            target:
              entity_id: script.set_relative_light_level
            data:
              variables:
                group_entity_id: group.guests_dimmable_lights
                light_entity_id: light.guests_dimmable_lights
                brightness: "{{ brightness }}"

      toilet_lights:
        friendly_name: "Toilet Lights"
        value_template: "{{ is_state('group.toilet_lights', 'on') }}"
        turn_on:
          - choose:
            - conditions:
              - condition: time
                after: input_datetime.late_night
                before: input_datetime.morning
              sequence:
                - service: light.turn_on
                  entity_id: light.toilet_night_light
            - conditions:
              - condition: time
                after: input_datetime.morning
                before: input_datetime.late_night
              sequence:
                - service: light.turn_on
                  entity_id: light.toilet_main
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.toilet_lights

      bathroom_lights:
        friendly_name: "Bathroom Lights"
        value_template: "{{ is_state('group.bathroom_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.bathroom_main
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.bathroom_lights

      riley_lights:
        friendly_name: "Riley Lights"
        value_template: "{{ is_state('group.riley_lights', 'on') }}"
        level_template: "{{ state_attr('group.riley_dimmable_lights','brightness') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.riley_main
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.riley_lights
        set_level:
          - service: script.turn_on
            target:
              entity_id: script.set_relative_light_level
            data:
              variables:
                group_entity_id: group.guests_dimmable_lights
                light_entity_id: light.guests_dimmable_lights
                brightness: "{{ brightness }}"

      bedroom_lights:
        friendly_name: "Bedroom Lights"
        value_template: "{{ is_state('group.bedroom_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.bedroom_main
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.bedroom_lights

script:
  light_test:
    sequence:
      - service: light.turn_off
        data:
          entity_id: "{{ expand('group.office_lights') | selectattr('state', 'equalto', 'on') | map(attribute='entity_id') | list }}"

  set_relative_light_level:
    mode: parallel
    sequence:
      - variables:
          brightness_delta: "{{ brightness - state_attr(light_entity_id, 'brightness') | int }}" #Read the current brightness level before it changes
      - repeat:
          for_each: "{{ expand(group_entity_id) | selectattr('state', 'equalto', 'on') | map(attribute='entity_id') | list }}" #Set brightness only for lights that are on
          sequence:
            - service: light.turn_on
              target:
                entity_id: "{{ repeat.item }}"
              data:
                brightness: > #Allow brightness to be between 1 and 255 only
                  {% if brightness >= 250 or brightness <= 5 -%}
                    {{ brightness }}
                  {%- else -%}
                    {{ min(255, max( (state_attr(repeat.item, 'brightness') | int + brightness_delta) , 1)) }}
                  {%- endif %}
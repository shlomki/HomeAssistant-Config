group:
  All Lights:
    entities:
      - light.living_room_lights
      - light.balcony_lights
      - light.kitchen_lights
      - light.hallway_lights
      - light.office_lights
      - light.guests_main
      - light.riley_main
      - light.bedroom_lights
      - light.toilet_lights
      - light.bathroom_lights

  All Lights Except Riley:
    entities:
      - light.living_room_lights
      - light.balcony_lights
      - light.kitchen_lights
      - light.hallway_lights
      - light.office_lights
      - light.guests_lights
      - light.bedroom_lights
      - light.toilet_lights
      - light.bathroom_lights

  Living Room Lights:
    entities:
      - light.living_room_main
      - light.living_room_entrance
      - light.living_room_hallway
      - light.living_room_tv_light
      - light.living_room_side_lamp
      - light.living_room_bff_light

  Living Room Dimmable Lights:
    entities:
      - light.living_room_main
      - light.living_room_entrance
      - light.living_room_hallway
      - light.living_room_side_lamp
      - light.living_room_tv_light

  Balcony Lights:
    entities:
      - light.balcony_main
      - light.balcony_string_lights

  Kitchen Lights:
    entities:
      - light.kitchen_island
      - light.kitchen_pantry
      - light.kitchen_counter

  Hallway Lights:
    all: true
    entities:
      - light.hallway_front
      - light.hallway_back

  Office Lights:
    entities:
      - light.office_main
      - light.office_bff_light

  Guests Lights:
    entities:
      - light.guests_main

  Toilet Lights:
    entities:
      - light.toilet_main
      - light.toilet_night_light
      - switch.toilet_vent

  Bathroom Lights:
    entities:
      - light.bathroom_main
      - light.bathroom_laundry
      - light.bathroom_cabinet

  Riley Lights:
    entities:
      - light.riley_main

  Bedroom Lights:
    entities:
      - light.bedroom_main
      - light.bedroom_entrance
      - light.bedroom_closet

  Bedroom Dimmable Lights:
    entities:
      - light.bedroom_main
      - light.bedroom_entrance

light:
  - platform: template
    lights:
      living_room_dimmable_lights:
        friendly_name: "Living Room Dimmable Lights"
        value_template: "{{ expand('group.living_room_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='entity_id') | list | count > 0 }} " #Are any lights in the group on?
        level_template: "{{ max((expand('group.living_room_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='attributes.brightness') | list) or [0]) }} " #What's the max brighthness in the group?
        availability_template: "{{ expand('group.living_room_dimmable_lights') | selectattr('state', 'in', ['on','off']) | list | count > 0 }}" #Are all lights in the group available?
        turn_on:
          - service: light.turn_on
            data:
              entity_id: "{{ expand('group.living_room_dimmable_lights') | map(attribute='entity_id') | list }}" #Turn on all lights in the group
        turn_off:
          - service: light.turn_off
            data:
              entity_id: "{{ expand('group.living_room_dimmable_lights') | map(attribute='entity_id') | list }}" #Turn off all lights in the group
        set_level:
          - service: light.turn_on
            data:
              entity_id: "{{ expand('group.living_room_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='entity_id') | list }}" #Set brightness for lights that are on only
              brightness: "{{ brightness }}"

  - platform: group
    name: Hallway Dimmable Lights
    entities:
      - light.hallway_front
      - light.hallway_back

  - platform: template
    lights:
      bedroom_dimmable_lights:
        friendly_name: "Bedroom Dimmable Lights"
        value_template: "{{ expand('group.bedroom_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='entity_id') | list | count > 0 }} " #Are any lights in the group on?
        level_template: "{{ max((expand('group.bedroom_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='attributes.brightness') | list) or [0]) }} " #What's the max brighthness in thr group?
        availability_template: "{{ expand('group.bedroom_dimmable_lights') | selectattr('state', 'in', ['on','off']) | list | count > 0 }}" #Are all lights in the group available?
        turn_on:
          - service: light.turn_on
            data:
              entity_id: "{{ expand('group.bedroom_dimmable_lights') | map(attribute='entity_id') | list }}" #Turn on all lights in the group
        turn_off:
          - service: light.turn_off
            data:
              entity_id: "{{ expand('group.bedroom_dimmable_lights') | map(attribute='entity_id') | list }}" #Turn off all lights in the group
        set_level:
          - service: light.turn_on
            data:
              entity_id: "{{ expand('group.bedroom_dimmable_lights') | selectattr('state', 'equalto', 'on') | map(attribute='entity_id') | list }}" #Set brightness for lights that are on only
              brightness: "{{ brightness }}"

  - platform: template
    lights:
      all_lights:
        value_template: "{{ is_state('group.all_lights', 'on') }}"
        turn_on:
          service: homeassistant.turn_on
          target:
            entity_id: group.all_lights_except_riley
        turn_off:
          - service: light.turn_off
            target:
              entity_id: light.master

      #Template lights for each area in the house
      #When turned on - turn on just one light in the room
      #When turned off - turn off all lights in the room

      living_room_lights:
        friendly_name: "Living Room Lights"
        value_template: "{{ is_state('group.living_room_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.living_room_side_lamp
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.living_room_lights

      balcony_lights:
        friendly_name: "Balcony Lights"
        value_template: "{{ is_state('group.balcony_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.balcony_string_lights
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.balcony_lights

      hallway_lights:
        unique_id: "Hallway Lights"
        friendly_name: "Hallway Lights"
        value_template: "{{ is_state('light.hallway_controllers_group','on') }}"
        level_template: "{{ state_attr('light.hallway_controllers_group','brightness') }}"
        availability_template: "{{ not (is_state('light.hallway_front','unavailable') and is_state('light.hallway_back','unavailable')) }}" #If hallway front & back are both unavailable, then unavailable. Otherwise, available.
        turn_on:
          - service: homeassistant.turn_on
            entity_id: light.hallway_controllers_group
        turn_off:
          - service: light.turn_off
            entity_id: light.hallway_controllers_group
        set_level:
          - if:
              - alias: "Hallway Front is On"
                condition: state
                entity_id: light.hallway_front
                state: "on"
            then:
              - service: light.turn_on
                data:
                  entity_id: light.hallway_front
                  brightness: "{{ brightness }}"

          - if:
              - alias: "Hallway Back is On"
                condition: state
                entity_id: light.hallway_back
                state: "on"
            then:
              - service: light.turn_on
                data:
                  entity_id: light.hallway_back
                  brightness: "{{ brightness }}"

      kitchen_lights:
        friendly_name: "Kitchen Lights"
        value_template: "{{ is_state('group.kitchen_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.kitchen_island
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.kitchen_lights

      office_lights:
        friendly_name: "Office Lights"
        value_template: "{{ is_state('group.office_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.office_main
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.office_lights

      guests_lights:
        friendly_name: "Guests Lights"
        value_template: "{{ is_state('group.guests_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.guests_main
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.guests_lights

      toilet_lights:
        friendly_name: "Toilet Lights"
        value_template: "{{ is_state('group.toilet_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.toilet_main
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.toilet_lights

      bathroom_lights:
        friendly_name: "Bathroom Lights"
        value_template: "{{ is_state('group.bathroom_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.bathroom_main
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.bathroom_lights

      riley_lights:
        friendly_name: "Riley Lights"
        value_template: "{{ is_state('group.riley_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.riley_main
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.riley_lights

      bedroom_lights:
        friendly_name: "Bedroom Lights"
        value_template: "{{ is_state('group.bedroom_lights', 'on') }}"
        turn_on:
          service: light.turn_on
          target:
            entity_id: light.bedroom_main
        turn_off:
          service: homeassistant.turn_off
          target:
            entity_id: group.bedroom_lights

script:
  light_test:
    sequence:
      - service: light.turn_off
        data:
          entity_id: "{{ expand('group.office_lights') | selectattr('state', 'equalto', 'on') | map(attribute='entity_id') | list }}"

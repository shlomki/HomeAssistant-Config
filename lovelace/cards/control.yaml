type: vertical-stack
cards:
  #Title
  - type: custom:button-card
    template: title
    name: Control

  #Parent Buttons

  #Lights
  - type: horizontal-stack
    cards:
      - type: custom:button-card
        template: ha-button
        name: Lights
        entity: group.all_lights
        icon: mdi:lightbulb-outline
        styles:
          card:
            - height: 100px
        tap_action:
          action: fire-dom-event
          local_conditional_card:
            action: set
            ids:
              - windows: hide
              - ac: hide
              - lights: toggle
              - shower: hide
              - scenes: hide
        double_tap_action:
          action: toggle
          confirmation:
            text: >-
              [[[ return 'Are you sure? Turn ' + (entity.state ==
              'off' ? 'ON' : 'OFF') + ' all Lights in the house?'
              ]]]

      #Windows
      - type: custom:button-card
        template: ha-button
        name: Windows
        entity: group.windows
        styles:
          card:
            - height: 100px
        state:
          - value: "on"
            icon: mdi:window-open
          - value: "off"
            icon: mdi:window-closed
        tap_action:
          action: fire-dom-event
          local_conditional_card:
            action: set
            ids:
              - windows: toggle
              - ac: hide
              - lights: hide
              - shower: hide
              - scenes: hide

      #AC
      - type: custom:button-card
        template: ha-button
        name: AC
        entity: sensor.ac_state
        icon: mdi:home-thermometer-outline
        styles:
          card:
            - height: 100px
          custom_fields:
            window_open:
              - position: absolute
              - left: 5%
              - top: 5%
              - height: 60px
              - width: 60px
              - visibility: |
                  [[[
                      if (states['sensor.all_rooms_temperature_monitor'].state != "Ok") return "visible";
                      return "visible";
                  ]]]
        double_tap_action:
          action: call-service
          service: script.toggle_dampers
          confirmation:
            text: >-
              [[[ return 'Are you sure? Turn ' +
              (states['group.dampers'].state == 'off' ? 'ON' :
              'OFF') + ' all ACs in the house?' ]]]
        tap_action:
          action: fire-dom-event
          local_conditional_card:
            action: set
            ids:
              - windows: hide
              - ac: toggle
              - lights: hide
              - shower: hide
              - scenes: hide
        hold_action:
          action: more-info
          entity: >
            [[[ return
            states[states['input_text.ac_entity_id'].state].entity_id
            ]]]
        state:
          - value: fan_only_on
            color: rgb(253, 216, 53)
            icon: mdi:fan
          - value: fan_only_off
            color: rgb(68, 115, 158)
            icon: mdi:fan
          - value: dry_on
            color: rgb(253, 216, 53)
            icon: mdi:water-percent
          - value: dry_off
            color: rgb(68, 115, 158)
            icon: mdi:water-percent
          - value: auto_on
            color: rgb(253, 216, 53)
            icon: mdi:autorenew
          - value: auto_off
            color: rgb(68, 115, 158)
            icon: mdi:autorenew
          - operator: regex
            value: ^off_.*$
            color: rgb(68, 115, 158)
            icon: mdi:power-plug-off-outline
          - operator: regex
            value: ^((?!off).)*_on$
            color: rgb(253, 216, 53)
          - operator: regex
            value: ^((?!off).)*_off$
            color: rgb(68, 115, 158)
        custom_fields:
          window_open: >
            [[[ let monitor =
            states['sensor.all_rooms_temperature_monitor'].state;
                let color = monitor.replace('Ok', '').replace('Very ', '').replace('Cold', 'turquoise').replace('Hot', 'red');
                let icon = monitor.replace('Ok', '').replace('Very ', '').replace('Cold', 'snowflake').replace('Hot', 'fire');
                return '<ha-icon icon="mdi:' + icon + '" style="width: 16px; height:16px; color:' + color + ';"></ha-icon>'; ]]]
        triggers_update: sensor.all_rooms_temperature_monitor

      #Shower
      - type: custom:button-card
        template: ha-button
        name: Shower
        icon: mdi:shower
        entity: group.shower
        styles:
          card:
            - height: 100px
        tap_action:
          action: fire-dom-event
          local_conditional_card:
            action: set
            ids:
              - windows: hide
              - ac: hide
              - lights: hide
              - shower: toggle
              - scenes: hide
        double_tap_action:
          action: call-service
          service: script.toggle_shower
          confirmation:
            text: >-
              [[[ return 'Are you sure? Turn ' +
              (states['group.shower'].state == 'off' ? 'ON' : 'OFF')
              + ' Boiler & Heater?' ]]]

      #Scenes
      - type: custom:button-card
        template: ha-button
        name: Quick
        icon: mdi:gesture-double-tap
        styles:
          card:
            - height: 100px
        tap_action:
          action: fire-dom-event
          local_conditional_card:
            action: set
            ids:
              - windows: hide
              - ac: hide
              - lights: hide
              - shower: hide
              - scenes: toggle
        color: rgb(68, 115, 158)

  #Hidden Cards

  #Lights
  - type: custom:local-conditional-card
    default: hide
    id: lights
    card: !include /config/lovelace/cards/control_lights_container.yaml

  #Windows
  - type: custom:local-conditional-card
    default: hide
    id: windows
    card: !include /config/lovelace/cards/control_windows_container.yaml

  #AC
  - type: custom:local-conditional-card
    default: hide
    id: ac
    card: !include /config/lovelace/cards/control_ac_container.yaml

  #Shower
  - type: custom:local-conditional-card
    default: hide
    id: shower
    card: !include /config/lovelace/cards/control_shower_container.yaml

  #Scenes
  - type: custom:local-conditional-card
    default: hide
    id: scenes
    card: !include /config/lovelace/cards/control_scenes_container.yaml

title: AC Config
path: ac-config
icon: mdi:thermometer-lines
visible:
  - user: aa6d3713da1a4e1eac92dd176a3ae708
badges: []
cards:
  - entities:
      - entity: input_text.last_ac_mode
      - entity: input_text.ac_entity_id
      - entity: input_boolean.manual_ac
      - entity: input_boolean.manual_ac_force
      - entity: binary_sensor.internet_connection
      - entity: >-
          automation.manual_ac_choose_ekon_when_internet_and_ac_are_connected
      - entity: >-
          automation.manual_ac_choose_manual_ac_when_internet_or_ac_are_disconnected
      - entity: input_number.ac_damper_quick_to_medium
      - entity: input_number.ac_damper_quick_to_low
    show_header_toggle: false
    title: AC Config
    type: entities
  - entities:
      - entity: input_select.gray_fan_location
      - entity: input_select.blue_fan_location
    show_header_toggle: false
    title: Fan Locations
    type: entities
  - entities:
      - entity: input_boolean.ac_damper_living_room_need_update
      - entity: input_boolean.ac_damper_office_need_update
      - entity: input_boolean.ac_damper_guests_need_update
      - entity: input_boolean.ac_damper_riley_need_update
      - entity: input_boolean.ac_damper_bedroom_need_update
      - entity: automation.update_room_temperature_for_dampers
    show_header_toggle: false
    title: AC Dampers Update
    type: entities
  - entities:
      - entity: input_select.ac_smartauto_location
      - entity: automation.ac_smartauto
      - entity: switch.ac_smartauto
        name: Fan / AC
      - entity: binary_sensor.ac_smartauto_enabled
      - entity: sensor.ac_smartauto
      - entity: input_number.ac_smartauto_min_living_room
      - entity: input_number.ac_smartauto_max_living_room
      - entity: input_number.ac_smartauto_min_office
      - entity: input_number.ac_smartauto_max_office
      - entity: input_number.ac_smartauto_min_guests
      - entity: input_number.ac_smartauto_max_guests
      - entity: input_number.ac_smartauto_min_riley
      - entity: input_number.ac_smartauto_max_riley
      - entity: input_number.ac_smartauto_min_bedroom
      - entity: input_number.ac_smartauto_max_bedroom
      - entity: input_boolean.ac_smartauto_min_cycle_passed
    show_header_toggle: false
    title: SmartAuto Settings
    type: entities
  - type: entities
    entities:
      - entity: binary_sensor.rain
    title: Rain
  - type: entities
    entities:
      - entity: input_select.season
      - entity: input_number.room_temperature_min_summer
      - entity: input_number.room_temperature_max_summer
      - entity: input_number.room_temperature_min_autumn
      - entity: input_number.room_temperature_max_autumn
      - entity: input_number.room_temperature_min_winter
      - entity: input_number.room_temperature_max_winter
      - entity: input_number.room_temperature_min_spring
      - entity: input_number.room_temperature_max_spring
      - entity: input_number.room_temperature_min
      - entity: input_number.room_temperature_max
    title: Monitoring
  - entities:
      - switch.bathroom_heater
      - input_number.bathroom_heater_timer_duration
      - timer.bathroom_heater
      - switch.water_boiler
      - input_number.water_boiler_timer_duration
    show_header_toggle: false
    title: Bathroom Heating
    type: entities

  #Dampers
  - type: vertical-stack
    cards:
      - type: custom:mini-climate
        entity: climate.ac_damper_living_room
        swap_temperatures: true
        hvac_mode:
          hide: true
        fan_mode:
          location: main
        buttons:
          power:
            location: main
            icon: mdi:power
            state:
              mapper: "state => (state == 'fan_only' ? 'on': 'off')"
            toggle_action: >
              (state) => this.call_service('homeassistant', (state == 'on' ? 'turn_off':
              'turn_on'),  { 'entity_id': 'climate.ac_damper_living_room' })
        indicators:
          humidity:
            icon: mdi:water
            unit: "%"
            round: 1
            source:
              entity: sensor.living_room_climate_humidity
          window:
            icon:
              template: |
                (value) => (value == '' ? '' : 'mdi:window-open-variant')
              style: |
                (value) => (value == 'Balcony' ? { color: 'red'} : {})
            source:
              entity: binary_sensor.balcony_window
              mapper: >-
                state => (state == 'off' ? '': (state == 'on' ? 'Balcony':
                'Unavailable'))
          window2:
            icon:
              template: |
                (value) => (value == '' ? '' : 'mdi:window-open-variant')
              style: |
                (value) => (value == 'Kitchen' ? { color: 'red'} : {})
            source:
              entity: binary_sensor.kitchen_window
              mapper: >-
                state => (state == 'off' ? '': (state == 'on' ? 'Kitchen':
                'Unavailable'))

      - type: custom:mini-climate
        entity: climate.ac_damper_office
        swap_temperatures: true
        hvac_mode:
          hide: true
        fan_mode:
          location: main
        buttons:
          power:
            location: main
            icon: mdi:power
            state:
              mapper: "state => (state == 'fan_only' ? 'on': 'off')"
            toggle_action: >
              (state) => this.call_service('homeassistant', (state == 'on' ? 'turn_off':
              'turn_on'),  { 'entity_id': 'climate.ac_damper_living_room' })
        indicators:
          humidity:
            icon: mdi:water
            unit: "%"
            round: 1
            source:
              entity: sensor.office_climate_humidity
          window:
            icon:
              template: |
                (value) => (value == '' ? '' : 'mdi:window-open-variant')
              style: |
                (value) => (value == 'Window Open' ? { color: 'red'} : {})
            source:
              entity: binary_sensor.office_window
              mapper: >-
                state => (state == 'off' ? '': (state == 'on' ? 'Window
                Open': 'Unavailable'))

      - type: custom:mini-climate
        entity: climate.ac_damper_guests
        swap_temperatures: true
        hvac_mode:
          hide: true
        fan_mode:
          location: main
        buttons:
          power:
            location: main
            icon: mdi:power
            state:
              mapper: "state => (state == 'fan_only' ? 'on': 'off')"
            toggle_action: >
              (state) => this.call_service('homeassistant', (state == 'on' ? 'turn_off':
              'turn_on'),  { 'entity_id': 'climate.ac_damper_guests' })
        indicators:
          humidity:
            icon: mdi:water
            unit: "%"
            round: 1
            source:
              entity: sensor.guests_climate_humidity
          window:
            icon:
              template: |
                (value) => (value == '' ? '' : 'mdi:window-open-variant')
              style: |
                (value) => (value == 'Window Open' ? { color: 'red'} : {})
            source:
              entity: binary_sensor.guests_window
              mapper: >-
                state => (state == 'off' ? '': (state == 'on' ? 'Window
                Open': 'Unavailable'))

      - type: custom:mini-climate
        entity: climate.ac_damper_riley
        swap_temperatures: true
        hvac_mode:
          hide: true
        fan_mode:
          location: main
        buttons:
          power:
            location: main
            icon: mdi:power
            state:
              mapper: "state => (state == 'fan_only' ? 'on': 'off')"
            toggle_action: >
              (state) => this.call_service('homeassistant', (state == 'on' ? 'turn_off':
              'turn_on'),  { 'entity_id': 'climate.ac_damper_riley' })
        indicators:
          humidity:
            icon: mdi:water
            unit: "%"
            round: 1
            source:
              entity: sensor.riley_climate_humidity
          window:
            icon:
              template: |
                (value) => (value == '' ? '' : 'mdi:window-open-variant')
              style: |
                (value) => (value == 'Window Open' ? { color: 'red'} : {})
            source:
              entity: binary_sensor.riley_window
              mapper: >-
                state => (state == 'off' ? '': (state == 'on' ? 'Window
                Open': 'Unavailable'))

      - type: custom:mini-climate
        entity: climate.ac_damper_bedroom
        swap_temperatures: true
        hvac_mode:
          hide: true
        fan_mode:
          location: main
        buttons:
          power:
            location: main
            icon: mdi:power
            state:
              mapper: "state => (state == 'fan_only' ? 'on': 'off')"
            toggle_action: >
              (state) => this.call_service('homeassistant', (state == 'on' ? 'turn_off':
              'turn_on'),  { 'entity_id': 'climate.ac_damper_bedroom' })
        indicators:
          humidity:
            icon: mdi:water
            unit: "%"
            round: 1
            source:
              entity: sensor.bedroom_climate_humidity
          window:
            icon:
              template: |
                (value) => (value == '' ? '' : 'mdi:window-open-variant')
              style: |
                (value) => (value == 'Window Open' ? { color: 'red'} : {})
            source:
              entity: binary_sensor.bedroom_window
              mapper: >-
                state => (state == 'off' ? '': (state == 'on' ? 'Window
                Open': 'Unavailable'))
